{"pages":[{"title":"目录","text":"","link":"/categories/index.html"}],"posts":[{"title":"你好世界","text":"时隔许久，终于又开始写blog了，也许没啥优质内容，也许这网站永远就我一人看，但没关系，只为世界还有我一丝存在的意义。 本blog的主要内容 coding 简易教程：（指和网上一样的题材，类似的内容）当然，写的话就尽量详尽，把遇到的坑都说明。 leetcode：今年要在leetcode刷题，无论难易都会尽量写一点 技术笔记：纯原创内容，一年预计能有3篇左右 折腾硬件：各类设备刷机历程，比流程笔记稍微好多（ 从0开始的linux学习之路：从最简单的命令行到各种配置，更多是给自己查询用。 生活笔记 闲来：自然要胡说八道。 游记：以照片分享为主。 动画：漫画和小说，评价和推荐。 原神：每个版本的一点记录。 兴趣（轻重缓急分先后） 台风，没机会也没胆量当一个追风者，但还是能在windy和人一起看看风。 绘画，啊这，每年都是学画画的最佳时机，2021也是。 小说，语文没过90分，真的要写么（。 游戏制作，一直想做个小游戏，哎嘿，等我会画画，会写剧情的时候（。 PS：特地在博客还没弄好的时候，就开始写这篇了，也是希望能以此为戒，少折腾折腾主题、插件，多输出点优质内容吧。","link":"/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E9%97%B2%E6%9D%A5/hello-world/"},{"title":"Hexo和Icarus折腾","text":"本篇正在编写中 存在许多未经证明的内容，可能会导致误解，因此，除本文转载的内容外，其余内容未经许可，禁止转载. 主要是一些Hexo和Icarus以及在vscode上的插件及其设置，部分插件使用教程直接来自于插件的官方文档。 .post-summary { display: none; } 魔改固定顶部导航 本段正在编写中 pjax 本段正在编写中 首页文章显示tags 本段正在编写中 宽度修改 本段正在编写中 WEBP格式 本段正在编写中 遇到的问题hexo和vscode均兼容的图片显示目前显示图片用的是 1{% asset_img hexo-blog-encrypt.png %} 在vscode中没法正常显示，但在hexo s 和 hexo g 中都能正常显示。 尝试了一下利用Markdown Preview Enhanced中的Extend Parser进行渲染，目前网上主流的修改方式如下： 使用ctrl+shift+p输入Markdown Preview Enhanced: Extend Parser编辑onWillParseMarkdown函数。 1234567891011module.exports = { onWillParseMarkdown: function(markdown) { return new Promise((resolve, reject)=&gt; { markdown = markdown.replace( /\\{%\\s*asset_img\\s*(.*)\\s*%\\}/g, (whole, content) =&gt; (`![img](${content})`) ) return resolve(markdown) }) }, ... 这样的修改方式实际上将{% asset_img hexo-blog-encrypt.png %}修改为![img](${content})，不知道什么版本的markdown能渲染出来（并且我使用vscode和typora都不能正常显示），但这样是有问题的，因为markdown显示图片需要使用相对地址，不应该使用文件名读取同名目录下的文件。 因此，需要在content前补充一个文件夹名，由于文件夹和文件以及标题是同名的，因此这里用标题来作为dir路径，如果你的不是这样命名，可能还需要别的方法。 1234567891011121314module.exports = { onWillParseMarkdown: function(markdown) { return new Promise((resolve, reject)=&gt; { // 寻找一行开头为title:的行, 并进行正则提取 var r = /title: (.*)/ var dir = r.exec(markdown)[1] markdown = markdown.replace( /\\{%\\s*asset_img\\s*(\\S*)\\s*(.*)\\s+%\\}/g, (whole, file_name, file_info) =&gt; (`![${file_info}](${dir}/${file_name})`) ) return resolve(markdown) }) }, ... 这样就能够正常预览了，虽然这样实现不太优雅hhhh，但预计未来会使用图床或对象存储进行图片存储，因此这个就不做调整了。 vscode中预览bulma样式本站使用了bulma样式对markdown进行补充，但在vscode的预览中，引入的html语句因为没有css因此不能正常显示，因此需要把bulma的css引入进来。 使用ctrl+shift+p输入Markdown Preview Enhanced: Customize CSS编辑，将bulma的提供的css贴上或者引入均可。 https://bulma.io/ 导入后就可以看到显示的效果了，注意bulma提供的css对markdown有侵入，如果发现哪里出现问题了，把对应的css注释掉即可，以下是我修改的一些部分。 点击展开代码 >folded1234567891011121314151617181920212223242526// 注释number类// .number {// align-items: center;// background-color: whitesmoke;// border-radius: 9999px;// display: inline-flex;// font-size: 1.25rem;// height: 2em;// justify-content: center;// margin-right: 1.5rem;// min-width: 2.5em;// padding: 0.25rem 0.5rem;// text-align: center;// vertical-align: top;// }// 添加.message-body p// 用于对message-body内p标签的调整，不然会有16px的错误margin.message-body p { margin-bottom: 0;}// 同上，为了之后方便改，就不写一起了.message-header p { margin-bottom: 0;} 同时，在Markdown Preview Enhanced: Extend Parser中，编辑onWillParseMarkdown函数，添加如下内容，将Raw代码块排除渲染。 123456789markdown = markdown.replace( /\\{% endraw %}/g, (whole) =&gt; (``))markdown = markdown.replace( /\\{% raw %}/g, (whole) =&gt; (``)) 显示效果： 插件Waline 评论 本段正在编写中，可能要换评价插件，暂时不写这段了 Hexo-blog-encrypt 加密html内容直接加密，应该还是比较安全的 安装1npm install --save hexo-blog-encrypt 使用在文章前添加密码和其他说明（以下内容摘自hexo-blog-encrypt github） 12345password: helloabstract: 有东西被加密了, 请输入密码查看.message: 您好, 这里需要密码.wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容. 也可以在_config.yml中设置，其中tags可以根据tag设置密码，并自动加密 123456789# Securityencrypt: # hexo-blog-encrypt abstract: 有东西被加密了, 请输入密码查看. message: 您好, 这里需要密码. tags: - {name: tagName, password: 密码A} - {name: tagName, password: 密码B} wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试. wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容. 显示效果 Hexo-native-lazy-load 懒加载使用npm install hexo-native-lazy-load --save安装，并在_config.yml添加： 1234# lazy—loadlazy_load: enable: true onlypost: false 即可实现懒加载，图片不需要手动添加loading=&quot;lazy&quot;，如果f12后发现img标签没有正确的添加lazy属性，则需要执行hexo clean，成功效果如下。 Hexo-generator-feed rss订阅现在用rss的人已经不多了（虽然我还在用），所以要给博客加个rss。使用npm hexo-generator-feed --save安装，并在_config.yml添加： 123456# rss# rssfeed: type: atom path: atom.xml limit: 20 就可以使用了，具体配置参数可以在 https://github.com/hexojs/hexo-generator-feed 这里看。同时还需要在Icarus中设置rss链接，在_config.icarus.yml的widgets.social_links中添加： 123RSS: icon: fas fa-rss url: /atom.xml 即可显示rss按钮了。 Hexo-generator-sitemap 站点地图使用npm install hexo-generator-sitemap --save安装后，并在_config.yml添加： 12345# sitemapsitemap: path: sitemap.xml tags: false categories: false Hexo-tag-steamgame steam游戏插件使用npm install hexo-tag-steamgame --save安装后，在文章内添加： 12345{% steamgame appid description %}# 例如{% steamgame 1127500 迷你地铁制作组的新作品 %}# 或者，不带简介，默认会使用steam的简介{% steamgame 246620 %}","link":"/coding/%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/Hexo%E5%92%8CIcarus%E6%8A%98%E8%85%BE/"},{"title":"EMBY部署并利用rclone挂载onedrive","text":"本文从应用注册到Emby搭建配置以及魔改都进行了说明，尽量让所有人都能看懂（不存在的，包括但不限于以下内容： onedrive应用注册 rclone配置 emby搭建 emby媒体库设置 emby客户端配置 其他魔改 折腾Emby，主要还是为了存档，平时看的机会挺少的，毕竟下新东西也麻烦2333。 应用注册 如果你已经注册了应用，或者你使用其他网盘挂载，请跳过这一步 或者，如果你并不是使用的E5，没有刷API的需求，也可以跳过这一步。 首先打开Azure进行应用注册 https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade 选择新注册即可开始注册。 设置名称和返回url名称：按需填写 受支持的帐户类型：任何组织目录(任何 Azure AD 目录 - 多租户)中的帐户和个人 Microsoft 帐户(例如，Skype、Xbox) 重定向 URI：选择WEB，并填入程序提供的API地址（本文使用rclone，所以要用rclone给的返回地址 http://localhost:53682/） 保存应用程序(客户端) ID如标记处所示，复制保存即可 设置密码接着在 证书和密码界面添加新客户端密码，截止日期选24个月（可以改html变永久但没必要） 稍等片刻，复制新添加的客户端密码的值（注意是值，不要复制ID） PS: 如果你已经更新windows11，新的粘贴板（win + v）已经可以锁定了，重启之后也不会丢失数据，很适合暂时保存这类数据。 设置权限接在API 权限界面单击添加权限并选择Microsoft Graph 点击委托的权限，搜索并添加以下权限：Files.Read、Files.ReadWrite、Files.Read.All、Files.ReadWrite.All、offline_access、User.Read。 添加成功后，就可以看到你设置的权限了，这里再授权一下（这些权限可以不用这一步） 安装并配置rclone12345# 安装包apt-get install wget curl ca-certificates unzip# 安装rclonecurl https://rclone.org/install.sh | bash 接着在你本地设备中创建配置（如果你本地计算机没有rclone，我推荐使用scoop安装，之后会补这一段的内容） 1234# 如果你使用APIrclone config# 如果你使用微软默认APIrclone authorize onedrive 如果你使用微软默认API，请直接跳过下面的代码段 这里贴一下rclone配置的流程（没必要看，都是交互式流程，不过注意登录时勾选代表组织同意。） 点击展开代码 >folded12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879PS &gt; rclone configCurrent remotes:Name Type==== ====e) Edit existing remoten) New remoted) Delete remoter) Rename remotec) Copy remotes) Set configuration passwordq) Quit confige/n/d/r/c/s/q&gt; nname&gt; EMBY...Storage&gt; 26** See help for onedrive backend at: https://rclone.org/onedrive/ **OAuth Client IdLeave blank normally.Enter a string value. Press Enter for the default (&quot;&quot;).client_id&gt; 请输入你的应用程序(客户端) IDOAuth Client SecretLeave blank normally.Enter a string value. Press Enter for the default (&quot;&quot;).client_secret&gt; 请输入你的客户端密码Choose national cloud region for OneDrive.Enter a string value. Press Enter for the default (&quot;global&quot;).Choose a number from below, or type in your own value 1 / Microsoft Cloud Global \\ &quot;global&quot; 2 / Microsoft Cloud for US Government \\ &quot;us&quot; 3 / Microsoft Cloud Germany \\ &quot;de&quot; 4 / Azure and Office 365 operated by 21Vianet in China \\ &quot;cn&quot;region&gt; 1Edit advanced config? (y/n)y) Yesn) No (default)y/n&gt; nRemote configMake sure your Redirect URL is set to &quot;http://localhost:53682/&quot; in your custom config.Use auto config? * Say Y if not sure * Say N if you are working on a remote or headless machiney) Yes (default)n) Noy/n&gt; yIf your browser doesn't open automatically go to the following link: http://127.0.0.1:53682/auth?state=************************Log in and authorize rclone for accessWaiting for code...Got codeChoose a number from below, or type in an existing value 1 / OneDrive Personal or Business \\ &quot;onedrive&quot; 2 / Root Sharepoint site \\ &quot;sharepoint&quot; 3 / Sharepoint site name or URL (e.g. mysite or https://contoso.sharepoint.com/sites/mysite) \\ &quot;url&quot; 4 / Search for a Sharepoint site \\ &quot;search&quot; 5 / Type in driveID (advanced) \\ &quot;driveid&quot; 6 / Type in SiteID (advanced) \\ &quot;siteid&quot; 7 / Sharepoint server-relative path (advanced, e.g. /teams/hr) \\ &quot;path&quot;Your choice&gt; 1Found 1 drives, please select the one you want to use:0: OneDrive (business) id=b!**********************************************Chose drive to use:&gt; 0Found drive 'root' of type 'business', URL: https://***********************Is that okay?y) Yes (default)n) Noy/n&gt; y 结束后就可以看到token，此时，把整个花括号（包含花括号）的内容都复制。 再在服务器上配置rclone config，流程与本地一致。 但在这一步时，选择n，并粘贴之前复制的token，其他步骤保持不变，即可配置完成。 输入rclone lsd 名称: 即可检查挂载是否成功了。 Rclone挂载接着需要把rclone挂载到文件目录，首先需要安装fuse。 1apt-get install fuse 接着挂载目录，注意这里需要先mkdir你需要的目录，不能自动创建。 123456789rclone mount EMBY: /home//emby//onedrive \\ --umask 0000 \\ --default-permissions \\ --allow-non-empty \\ --allow-other \\ --buffer-size 32M \\ --dir-cache-time 12h \\ --vfs-read-chunk-size 64M \\ --vfs-read-chunk-size-limit 1G &amp; 注意这里的参数，其中EMBY对应的就是你rclone的名称，后面是挂载的目录。 输入 df -h 就可以看到挂载的目录了 注意，在重启后挂载会丢失，需要重新挂载 安装EMBY并配置文件夹终于到了安装emby的时间了（这一步反而是最简单的） 12wget https://github.com/MediaBrowser/Emby.Releases/releases/download/4.6.4.0/emby-server-deb_4.6.4.0_amd64.debdpkg -i emby-server-deb_4.6.4.0_amd64.deb 初始化安装完成就可以在浏览器打开 http://ip:8096/ 进入EMBY了（注意vps服务商的防火墙） ps：如果长时间没有反应，需要刷新一下浏览器，第一次运行有点慢，属于正常现象。 进入之后就可以设置EMBY了 选择中文（不会立刻生效） 设置用户名和密码 注意这一步先不要添加媒体库，等装完刮削器再添加 选择偏好元数据，国家选world 启用自动端口映射 然后就完成了，登录emby后，首先要设置 基本设置 关闭emby转码打开设置，选择用户并点击要关闭转码的用户。 关闭图中显示的①②，则是可选项③④（需要premiere才能使用，建议关闭） 同时建议关闭，以免手滑 修改缓存目录点击设置，设置缓存路径，这里也需要先mkdir，并需要使用chmod 777授予权限。 修改元数据路径在媒体据-&gt;高级-&gt;元数据路径 添加刮削器（根据需要自行安装）如果你需要刮削日本动画，这里推荐anime，在插件-&gt;元数据找到anime，并安装 重启 Emby建立媒体库这里以动画为例，提供一下我的设置方案（注意刮削器要重启后才有） 显示效果： 总体来说还是不错的，有些译名用的很奇怪的版本，还是要手动修改一下。 Emby绑定域名并启用httpsEmby本身是能够绑定域名，使用ssl证书的。但由于我们还有一些骚操作后面要做，这里还是选择使用nginx做端口转发，本文使用Oneinstack进行nginx配置，并自动更新ssl证书。 在他们官网 https://oneinstack.com/auto/ 选好要用什么东西，直接就能生成一键脚本了，很方便。 123456# 安装screenapt-get install screen# 启动screenscreen -S Oneinstack# 仅有nginx的安装模式，注意22处应当修改为你的ssh端口。wget -c http://mirrors.linuxeye.com/oneinstack-full.tar.gz &amp;&amp; tar xzf oneinstack-full.tar.gz &amp;&amp; ./oneinstack/install.sh --nginx_option 1 --ssh_port 22 --reboot PS：趁还在安装的时候，先去dns提供商那设置A解析，解析到vps的ip上。 注意，如果你在cloudflare设置了强制加密，或者http转https，在验证时需要暂时关闭（哪怕只是使用他们的dns） 等安装完成后，cd到Oneinstack文件夹，执行./vhost.sh即可进行虚拟主机+ssl证书的配置，纯傻瓜配置，就不说明了。 在配置完成后，还需要手动设置端口转发，编辑conf文件。 1nano /usr/local/nginx/conf/vhost/你设置的域名.conf 在include后加入（可以不管缩进） 123456789location ~ / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; proxy_redirect off; proxy_pass http://127.0.0.1:8096; # 如果要使用本地存储策略，请将下一行注释符删除，并更改大小为理论最大文件尺寸 # client_max_body_size 20000m;} 重启nginx服务 1service nginx restart 安全提醒 如果你已经能使用域名打开了，请在你的vps提供商那关闭端口，如果配置了防火墙，也一并关闭。 如果你在签发证书时在dns处关闭了强制https，经过身份验证的源服务器拉取等，请重新开启。 Emby客户端众所周知Emby的客户端都是要收钱的，在网上找到了一种利用自行搭建服务器伪造验证服务器的方法。原博主已经讲的很清楚了，这里就不再说明了。 版权提醒，建议使用正版 https://imrbq.cn/exp/emby_hack.html#toc_49 显示效果： Emby直链视频由于我的vps只有2t的下行流量，考虑到上面还有别的项目要跑，流量可能有点紧张，这里尝试把emby给的链接改成直链onedrive，vps宝贵的流量就省下来了（ 本段正在编写中 Emby刮削特殊内容 本段正在编写中","link":"/coding/%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/EMBY%E9%83%A8%E7%BD%B2%E5%B9%B6%E5%88%A9%E7%94%A8rclone%E6%8C%82%E8%BD%BDonedrive/"},{"title":"腾讯轻量windows重装debian","text":"买腾讯云windows版本，主要是为了官方更大的硬盘（以及1c2g，但windows server内存占用实在有点大，到手之后就需要重装一下系统了（腾讯云海外不能直接改linux）。 如果只是要重装系统，网上有许多一键DD脚本，许多还可以自选镜像文件，但使用起来还是有些不放心。本文利用github上一个2.5kstar的项目netboot.xyz进行安装（本质是利用pxe进行安装）。此项目使用的人多，并且其镜像文件全部都从官方直链下载，放心许多。 重置密码并登录腾讯云拿到手之后，首先要把windows密码重置了，初始是不会给你密码的，这一步在控制台操作即可。 重置完密码后，就可以使用vnc进行登录了，这里使用腾讯云直接给的vnc工具进行远程桌面连接。 顺利登录成功（ 一键DD由于netboot需要使用grub, 而windows安装grub并配置有点麻烦, 这里使用萌咔大佬做的windows to linux脚本（不直接使用这个脚本作为最终版本的原因是：1.萌咔大佬的blog已经打不开了，仅脚本还能下载，2.自定义镜像还需要手动提取文件，不太方便）。这里使用世界上最好的浏览器下载工具–IE下载。 https://moeclub.org/attachment/WindowsSoftware/win32loader.bat 此外还需要镜像文件，moeclub不太能下的动，因此这里选择了一个不确定安全性的镜像做跳板 http://depot.treesky.link/windddebian/initrd.imghttp://depot.treesky.link/windddebian/vmlinuz 下载完成后复制到C:\\win32-loader\\内并以管理员模式启动win32loader.bat选择本地安装 很快就会重启并自动安装完成了，默认密码是MoeClub.org，请立即使用passwd修改密码 配置 netboot.xyz 本段内容参考了 https://blog.ni-co.moe/public/576.html 接着就可以使用netboot.xyz进行安装了，首先要安装环境并下载 12345apt-get update# 下载ca证书apt-get install ca-certificates# 下载netboot.xyz.lkrn并保存到/boot/wget https://boot.netboot.xyz/ipxe/netboot.xyz.lkrn -O /boot/netboot.xyz.lkrn 然后编辑/boot/grub/grub.cfg（理论上应当编辑/etc/grub.d/和/etc/default/grub/内的内容，但这里只使用一次，因此没必要了）在menuentry前添加： 12345nano /boot/grub/grub.cfg# 添加如下内容menuentry &quot;netboot.xyz.lkrn&quot; { linux16 /boot/netboot.xyz.lkrn} 保存后重启即可。 安装 Debian由于设置在第一个，重启后自动就会进入netboot.xyz界面（可能还需要配置网络，根据vps提供商给的内网ip进行配置就行），这里选择linux Network Installs，选择需要的系统和版本后直接安装即可。 安装前还会询问安装器模式，这里选择Text或Graphical均可（与安装后系统是否带gui无关）。 安装过程全中文，根据需要配置即可。请设置强密码，或在系统启动后立刻修改密码并注意在选择软件包时，取消桌面环境，并勾选ssh服务 基本设置安装系统后就可以使用安装时设置的非root账号进行登录了，非root账号有些不便，这里开启root使用密钥登录并修改端口，测试完成后，关闭密码登录。 不推荐使用root登录，但强烈建议修改端口和使用密钥登录。注意在修改端口后，需要在云提供商那修改防火墙放行新端口。 12345678910111213141516171819202122232425262728293031323334353637383940414243# 切换到root账号su# 打开配置文件nano /etc/ssh/sshd_config# 允许用户登录PermitRootLogin yes# 修改端口Port portnumber# 允许密钥登录RSAAuthentication yesPubkeyAuthentication yesAuthorizedKeysFile .ssh/authorized_keys# 生成密钥cd /rootssh-keygen -t rsa# 重命名cd ~/.sshcat id_rsa.pub &gt;&gt; authorized_keys# 设置权限chmod 600 authorized_keyschmod 700 /root/.ssh######################## 请下载id_rsa ######################### 删除id_rsarm id_rsarm id_rsa.pub# 重启服务/etc/init.d/ssh restart######################### 请测试登录 ########################## 打开配置文件nano /etc/ssh/sshd_config# 禁用密码登录PasswordAuthentication no# 重启服务/etc/init.d/ssh restart# 删除账号和组deluser --remove-home usernamegroupdel groupname 接着配置一下源，并更新系统 123456789101112131415# 修改源nano /etc/apt/sources.list# 改为以下内容deb http://deb.debian.org/debian/ buster main contrib non-freedeb-src http://deb.debian.org/debian/ buster main contrib non-freedeb http://security.debian.org/debian-security buster/updates main contrib non-freedeb-src http://security.debian.org/debian-security buster/updates main contrib non-freedeb http://deb.debian.org/debian buster-updates main contrib non-freedeb-src http://deb.debian.org/debian buster-updates main contrib non-freedeb http://deb.debian.org/debian buster-backports main contrib non-freedeb-src http://deb.debian.org/debian buster-backports main contrib non-free# 更新系统apt-get updateapt-get upgrade 更换系统注意由于在安装系统时调整了分区表，因此grub启动不能和原来的设置方法一样，这里提供使用默认分区模式的grub配置 123menuentry &quot;netboot.xyz.lkrn&quot; { linux16 (hd0,msdos1)/netboot.xyz.lkrn} 如果你修改了分区表，请自行寻找并修改文件位置。（在grub 交互式界面中可以使用ls） 1grub&gt; ls (hd0,msdos1)/","link":"/coding/%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/%E8%85%BE%E8%AE%AF%E8%BD%BB%E9%87%8Fwindows%E9%87%8D%E8%A3%85debian/"}],"tags":[{"name":"杂记","slug":"杂记","link":"/tags/%E6%9D%82%E8%AE%B0/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Icarus","slug":"Icarus","link":"/tags/Icarus/"},{"name":"EMBY","slug":"EMBY","link":"/tags/EMBY/"},{"name":"rclone","slug":"rclone","link":"/tags/rclone/"},{"name":"linux","slug":"linux","link":"/tags/linux/"},{"name":"vps","slug":"vps","link":"/tags/vps/"},{"name":"grub","slug":"grub","link":"/tags/grub/"}],"categories":[{"name":"生活笔记","slug":"生活笔记","link":"/categories/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/"},{"name":"闲来","slug":"生活笔记/闲来","link":"/categories/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E9%97%B2%E6%9D%A5/"},{"name":"coding","slug":"coding","link":"/categories/coding/"},{"name":"简易教程","slug":"coding/简易教程","link":"/categories/coding/%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/"}]}